apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: harbor-kube-dns
  namespace: harbor
spec:
  # Apply to all pods in this namespace
  endpointSelector: {}
  # Deny all ingress by default
  ingress: []
  egress:
    # Outbound to k8s DNS to look up IPs
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: ANY
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: harbor-allow-internal-traffic
  namespace: harbor
spec:
  # Apply to all pods in this namespace that have the label app.kubernetes.io/name: harbor
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: harbor
  # Allow ingress and egress to/from the database pods to/from all Harbor pods
  # Port 6379 is for Redis
  # Port 5432 is for PostgreSQL
  # Port 8080 is required for all Harbor components except Redis and PostgreSQL
  # Port 5000 is for the registry
  egress:
    - toEndpoints:
      - matchLabels:
          app.kubernetes.io/name: harbor
      toPorts:
        - ports:
          - port: "6379"
            protocol: TCP
          - port: "5432"
            protocol: TCP
          - port: "8080"
            protocol: TCP
          - port: "5000"
            protocol: TCP
  ingress:
    - fromEndpoints:
      - matchLabels:
          app.kubernetes.io/name: harbor
      toPorts:
        - ports:
          - port: "6379"
            protocol: TCP
          - port: "5432"
            protocol: TCP
          - port: "8080"
            protocol: TCP
          - port: "5000"
            protocol: TCP
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: harbor-allow-ingress
  namespace: harbor
spec:
  # Allow ingress traffic to the nginx component of Harbor from Ingress NGINX
  # and from remote nodes. A remote node is a node other than the one Harbor
  # is running on, allowing kubelet to pull images from the registry from other nodes
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: harbor
      component: nginx
  ingress:
    - fromEndpoints:
      - matchLabels:
          app.kubernetes.io/name: ingress-nginx
          k8s:io.kubernetes.pod.namespace: ingress-nginx
      toPorts:
        - ports:
          - port: "8080"
            protocol: TCP
    - fromEntities:
        - remote-node
      toPorts:
        - ports:
          - port: "8080"
            protocol: TCP
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: harbor-allow-egress-to-registries
  namespace: harbor
spec:
  # Allow the core component of Harbor to reach the Docker and GCHR registries
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: harbor
      component: core
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: ANY
          rules:
            dns:
              - matchName: "ghcr.io"
              - matchName: "hub.docker.com"
              - matchName: "registry-1.docker.io"
              - matchName: "production.cloudflare.docker.com"
              - matchName: "quay.io"
              - matchPattern: "cdn*.quay.io"
    - toFQDNs:
      - matchName: "ghcr.io"
      - matchName: "hub.docker.com"
      - matchName: "registry-1.docker.io"
      - matchName: "production.cloudflare.docker.com"
      - matchPattern: "cdn*.quay.io"
      - matchName: "quay.io"
